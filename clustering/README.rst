==========
クラスタリング
==========
2次元データを用いてK-Meansクラスタリングを実施します。

準備
====

- Jubatus 1.0 + Pythonクライアントで動作確認しています。
  
  - Python クライアントは `pip install jubatus` でインストールできます

- matplotlib + numpyがインストールされているとクラスタリング結果（グラフ）を保存します
  
  - インストールされていない場合はクラスタリング結果をテキスト(標準出力)で表示します
	
- データセットはdatasetsディレクトリに配置済みです

サーバーの起動
==============

jubaclustering を起動します。*jubatus-example/clustering* にいる前提で以下を実施します。


::

 $ jubaclustering --configpath config.json &


実行
====

以下のようにプログラムを実行してください。

::
   
 $ python clustering.py

このサンプルコードでは以下の処理を行っています。詳細はコードをご参照ください。

1. データセットの読み込み
2. jubaclusteringへデータを追加（クラスタリングの実施）
3. クラスタリング結果の取得
   
前述したグラフを出力するライブラリが事前にインストールされている場合は

::

 result.png

としてクラスタリング結果が保存されます。

*expect* ディレクトリにはデータセットをプロットしたグラフを配置しています。
どのようなデータをクラスタリングしようとしているのかを把握する際にご利用ください。
